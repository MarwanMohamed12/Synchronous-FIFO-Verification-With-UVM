Coverage Report by file with details

=================================================================================
=== File: FIFO.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           28        28         0     100.0

================================Statement Details================================

Statement Coverage for file FIFO.sv --

    1                                                ////////////////////////////////////////////////////////////////////////////////
    2                                                // Author: Kareem Waseem
    3                                                // Course: Digital Verification using SV & UVM
    4                                                //
    5                                                // Description: FIFO Design 
    6                                                // 
    7                                                ////////////////////////////////////////////////////////////////////////////////
    8                                                
    9                                                
    10                                               
    11                                               module FIFO(fifo_if if_t);
    12                                               
    13                                               reg [if_t.FIFO_WIDTH-1:0] mem [if_t.FIFO_DEPTH-1:0];
    14                                               
    15                                               reg [if_t.max_fifo_addr-1:0] wr_ptr, rd_ptr;
    16                                               reg [if_t.max_fifo_addr:0] count;
    17                                               
    18              1                       1049     always @(posedge if_t.clk or negedge if_t.rst_n) begin
    19                                               	if (!if_t.rst_n) begin
    20              1                         98     		wr_ptr <= 0;
    21              1                         98     		if_t.overflow <= 0; // we need to assign zero to this var because if it was high in cycle so in next cycle if rst it should be low but it still high
    22              1                         98     		if_t.wr_ack   <= 0; // we need to assign zero to this var because if it was high in cycle so in next cycle if rst it should be low but it still high
    23                                               	end
    24                                               	else if (if_t.wr_en  && count < if_t.FIFO_DEPTH) begin
    25              1                        481     		mem[wr_ptr] <= if_t.data_in;
    26              1                        481     		if_t.wr_ack <= 1;
    27              1                        481     		wr_ptr <= wr_ptr + 1;
    28                                               	end
    29                                               	else begin
    30              1                        470     		if_t.wr_ack <= 0;
    31                                               		if(if_t.full && if_t.wr_en && ! if_t.rd_en ) begin 
    32                                               		//  we should handle if there is read also
    33              1                          4     			if_t.overflow <= 1;
    34                                               		end
    35                                               		else begin
    36              1                        466     			if_t.overflow <= 0;
    37                                               		end
    38                                               
    39                                               	end
    40                                               
    41                                               
    42                                               
    43                                               
    44                                               end
    45                                               
    46              1                       1049     always @(posedge if_t.clk or negedge if_t.rst_n) begin
    47                                               	if (!if_t.rst_n) begin
    48              1                         98     		rd_ptr <= 0;
    49              1                         98     		if_t.underflow <= 0; // we need to assign zero to this var because if it was high in cycle so in next cycle if rst it should be low but it still high
    50                                               	end
    51                                               	else if (if_t.rd_en && count != 0) begin
    52              1                        377     		if_t.data_out <= mem[rd_ptr];
    53              1                        377     		rd_ptr <= rd_ptr + 1;
    54                                               	end
    55                                               	else begin
    56                                               		if(if_t.empty && !if_t.wr_en && if_t.rd_en )
    57              1                         53     			if_t.underflow <= 1;
    58                                               		else
    59              1                        521     			if_t.underflow <= 0;
    60                                               
    61                                               	end
    62                                               
    63                                               end
    64                                               
    65              1                        950     always @(posedge if_t.clk or negedge if_t.rst_n) begin
    66                                               	if (!if_t.rst_n) begin
    67              1                         98     		count <= 0;
    68                                               	end
    69                                               	else begin
    70                                               		if	( ({if_t.wr_en, if_t.rd_en} == 2'b10) && !if_t.full) 
    71              1                        243     			count <= count + 1;
    72                                               		else if ( ({if_t.wr_en, if_t.rd_en} == 2'b01) && !if_t.empty)
    73              1                        174     			count <= count - 1;
    74                                               		else if ( ({if_t.wr_en, if_t.rd_en} == 2'b11) && if_t.full)//we need to handle counter in write and read when full
    75              1                          9     			count <= count - 1;
    76                                               		else if ( ({if_t.wr_en, if_t.rd_en} == 2'b11) && if_t.empty)//we need to handle counter in write and read when empty
    77              1                         44     			count <= count + 1;
    78                                               	end
    79                                               end
    80                                               
    81              1                        506     assign if_t.full = (count == if_t.FIFO_DEPTH)? 1 : 0;
    82              1                        506     assign if_t.empty = (count == 0)? 1 : 0;
    83              1                        506     assign if_t.almostfull = (count == if_t.FIFO_DEPTH-1)? 1 : 0; // here it should be 1 not 2
    84              1                        506     assign if_t.almostempty = (count == 1)? 1 : 0;
    85                                               
    86                                               
    87                                               `ifdef SIM 
    88              1                        807     	always_comb begin 
    89                                               		if(!if_t.rst_n) begin
    90                                               			rst_check:assert final(wr_ptr==0 && rd_ptr==0 && count==0 && if_t.empty &&  !if_t.full && !if_t.almostfull && !if_t.almostempty );
    91                                               		end
    92                                               		if(count==if_t.FIFO_DEPTH )begin
    93                                               			full_check:assert final(if_t.full);
    94                                               		end
    95                                               
    96                                               		if(count==if_t.FIFO_DEPTH -1)begin
    97                                               			almost_full_check:assert final(if_t.almostfull);
    98                                               		end
    99                                               		if(count==0)begin
    100                                              			empty_check:assert final(if_t.empty);
    101                                              		end
    102                                              
    103                                              		if(count==1)begin
    104                                              			almost_empty_check:assert final(if_t.almostempty);
    105                                              		end
    106                                              	end
    107                                              
    108                                              
    109                                              property overflow_check;
    110                                              @(posedge if_t.clk)  disable iff(!if_t.rst_n) (count == if_t.FIFO_DEPTH && if_t.wr_en && ! if_t.rd_en) |=> (if_t.overflow) ;
    111                                              endproperty
    112                                              
    113                                              property underflow_check;
    114                                              @(posedge if_t.clk)  disable iff(!if_t.rst_n) (count == 0 && ! if_t.wr_en && if_t.rd_en) |=> (if_t.underflow);
    115                                              endproperty
    116                                              
    117                                              property WrAck_check;
    118                                              @(posedge if_t.clk) disable iff(!if_t.rst_n) (if_t.wr_en && count != if_t.FIFO_DEPTH) |=> (if_t.wr_ack);
    119                                              endproperty
    120                                              
    121                                              property internal_WR_check;
    122                                              @(posedge if_t.clk) disable iff(!if_t.rst_n) (if_t.wr_en && !if_t.rd_en && count < if_t.FIFO_DEPTH) |=> ( ( count == $past(count) + 1'b1) && ( wr_ptr==$past(wr_ptr) + 1'b1) );
    123                                              endproperty
    124                                              
    125                                              property internal_RE_check;
    126                                              @(posedge if_t.clk) disable iff(!if_t.rst_n) (if_t.rd_en && !if_t.wr_en && count > 0) |=> ( ( count == $past(count) - 1'b1) && ( rd_ptr==$past(rd_ptr) + 1'b1) );
    127                                              endproperty
    128                                              
    129                                              property internal_WR_RE_full;
    130                                              @(posedge if_t.clk) disable iff(!if_t.rst_n) ( if_t.rd_en && if_t.wr_en && if_t.full)  |=>  ( count == $past(count) -1'b1 && (rd_ptr==$past(rd_ptr) + 1'b1) );
    131                                              endproperty
    132                                              
    133                                              property internal_WR_RE_empty;
    134                                              @(posedge if_t.clk) disable iff(!if_t.rst_n) ( if_t.rd_en && if_t.wr_en && if_t.empty)  |=>  ( count == $past(count) + 1'b1 && (wr_ptr==$past(wr_ptr) + 1'b1) );
    135                                              endproperty
    136                                              
    137                                              property internal_WR_RE;
    138                                              @(posedge if_t.clk) disable iff(!if_t.rst_n) ( if_t.rd_en && if_t.wr_en && !if_t.full && !if_t.empty )  |=>  ( count == $past(count) && (rd_ptr==$past(rd_ptr) + 1'b1) && ( wr_ptr==$past(wr_ptr) + 1'b1) );
    139                                              endproperty
    140                                              
    141                                              OF_check:assert property(overflow_check);
    142                                              UF_check:assert property(underflow_check);
    143                                              ACK_check:assert property(WrAck_check);
    144                                              intWr_check:assert property(internal_WR_check);
    145                                              intRD_check:assert property(internal_RE_check);
    146                                              intWR_RD_WR:assert property(internal_WR_RE);
    147                                              intWR_RD_WR_full:assert property(internal_WR_RE_full);
    148                                              intWR_RD_WR_empty:assert property(internal_WR_RE_empty);
    149                                              
    150                                              OF_cover:cover property(overflow_check);
    151                                              UF_cover:cover property(underflow_check);
    152                                              ACK_cover:cover property(WrAck_check);
    153                                              intWr_cover:cover property(internal_WR_check);
    154                                              intRD_cover:cover property(internal_RE_check);
    155                                              intRD_WR_cover:cover property(internal_WR_RE);
    156                                              intWR_RD_WR_empty_cover:cover property(internal_WR_RE_empty);
    157                                              intWR_RD_WR_full_cover:cover property(internal_WR_RE_full);
    158                                              
    159                                              `endif
    160                                              endmodule

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        35        35         0     100.0

================================Branch Details================================

Branch Coverage for file FIFO.sv --

------------------------------------IF Branch------------------------------------
    19                                      1049     Count coming in to IF
    19              1                         98     	if (!if_t.rst_n) begin
    24              1                        481     	else if (if_t.wr_en  && count < if_t.FIFO_DEPTH) begin
    29              1                        470     	else begin
Branch totals: 3 hits of 3 branches = 100.0%

------------------------------------IF Branch------------------------------------
    31                                       470     Count coming in to IF
    31              1                          4     		if(if_t.full && if_t.wr_en && ! if_t.rd_en ) begin 
    35              1                        466     		else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    47                                      1049     Count coming in to IF
    47              1                         98     	if (!if_t.rst_n) begin
    51              1                        377     	else if (if_t.rd_en && count != 0) begin
    55              1                        574     	else begin
Branch totals: 3 hits of 3 branches = 100.0%

------------------------------------IF Branch------------------------------------
    56                                       574     Count coming in to IF
    56              1                         53     		if(if_t.empty && !if_t.wr_en && if_t.rd_en )
    58              1                        521     		else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    66                                       950     Count coming in to IF
    66              1                         98     	if (!if_t.rst_n) begin
    69              1                        852     	else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    70                                       852     Count coming in to IF
    70              1                        243     		if	( ({if_t.wr_en, if_t.rd_en} == 2'b10) && !if_t.full) 
    72              1                        174     		else if ( ({if_t.wr_en, if_t.rd_en} == 2'b01) && !if_t.empty)
    74              1                          9     		else if ( ({if_t.wr_en, if_t.rd_en} == 2'b11) && if_t.full)//we need to handle counter in write and read when full
    76              1                         44     		else if ( ({if_t.wr_en, if_t.rd_en} == 2'b11) && if_t.empty)//we need to handle counter in write and read when empty
                                             382     All False Count
Branch totals: 5 hits of 5 branches = 100.0%

------------------------------------IF Branch------------------------------------
    81                                       505     Count coming in to IF
    81              1                         17     assign if_t.full = (count == if_t.FIFO_DEPTH)? 1 : 0;
    81              2                        488     assign if_t.full = (count == if_t.FIFO_DEPTH)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    82                                       505     Count coming in to IF
    82              1                         89     assign if_t.empty = (count == 0)? 1 : 0;
    82              2                        416     assign if_t.empty = (count == 0)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    83                                       505     Count coming in to IF
    83              1                         37     assign if_t.almostfull = (count == if_t.FIFO_DEPTH-1)? 1 : 0; // here it should be 1 not 2
    83              2                        468     assign if_t.almostfull = (count == if_t.FIFO_DEPTH-1)? 1 : 0; // here it should be 1 not 2
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    84                                       505     Count coming in to IF
    84              1                        129     assign if_t.almostempty = (count == 1)? 1 : 0;
    84              2                        376     assign if_t.almostempty = (count == 1)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    89                                       807     Count coming in to IF
    89              1                         94     		if(!if_t.rst_n) begin
                                             713     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    92                                       807     Count coming in to IF
    92              1                         19     		if(count==if_t.FIFO_DEPTH )begin
                                             788     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    96                                       807     Count coming in to IF
    96              1                         51     		if(count==if_t.FIFO_DEPTH -1)begin
                                             756     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    99                                       807     Count coming in to IF
    99              1                        161     		if(count==0)begin
                                             646     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    103                                      807     Count coming in to IF
    103             1                        205     		if(count==1)begin
                                             602     All False Count
Branch totals: 2 hits of 2 branches = 100.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms             22        22         0     100.0

================================Condition Details================================

Condition Coverage for file FIFO.sv --

----------------Focused Condition View-------------------
Line       24 Item    1  (if_t.wr_en && (count < if_t.FIFO_DEPTH))
Condition totals: 2 of 2 input terms covered = 100.0%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
                 if_t.wr_en         Y
  (count < if_t.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  if_t.wr_en_0                 -                             
  Row   2:          1  if_t.wr_en_1                 (count < if_t.FIFO_DEPTH)     
  Row   3:          1  (count < if_t.FIFO_DEPTH)_0  if_t.wr_en                    
  Row   4:          1  (count < if_t.FIFO_DEPTH)_1  if_t.wr_en                    

----------------Focused Condition View-------------------
Line       31 Item    1  ((if_t.full && if_t.wr_en) && ~if_t.rd_en)
Condition totals: 3 of 3 input terms covered = 100.0%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   if_t.full         Y
  if_t.wr_en         Y
  if_t.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  if_t.full_0           -                             
  Row   2:          1  if_t.full_1           (~if_t.rd_en && if_t.wr_en)   
  Row   3:          1  if_t.wr_en_0          if_t.full                     
  Row   4:          1  if_t.wr_en_1          (~if_t.rd_en && if_t.full)    
  Row   5:          1  if_t.rd_en_0          (if_t.full && if_t.wr_en)     
  Row   6:          1  if_t.rd_en_1          (if_t.full && if_t.wr_en)     

----------------Focused Condition View-------------------
Line       51 Item    1  (if_t.rd_en && (count != 0))
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
    if_t.rd_en         Y
  (count != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  if_t.rd_en_0          -                             
  Row   2:          1  if_t.rd_en_1          (count != 0)                  
  Row   3:          1  (count != 0)_0        if_t.rd_en                    
  Row   4:          1  (count != 0)_1        if_t.rd_en                    

----------------Focused Condition View-------------------
Line       56 Item    1  ((if_t.empty && ~if_t.wr_en) && if_t.rd_en)
Condition totals: 3 of 3 input terms covered = 100.0%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  if_t.empty         Y
  if_t.wr_en         Y
  if_t.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  if_t.empty_0          -                             
  Row   2:          1  if_t.empty_1          (if_t.rd_en && ~if_t.wr_en)   
  Row   3:          1  if_t.wr_en_0          (if_t.rd_en && if_t.empty)    
  Row   4:          1  if_t.wr_en_1          if_t.empty                    
  Row   5:          1  if_t.rd_en_0          (if_t.empty && ~if_t.wr_en)   
  Row   6:          1  if_t.rd_en_1          (if_t.empty && ~if_t.wr_en)   

----------------Focused Condition View-------------------
Line       70 Item    1  ((~if_t.rd_en && if_t.wr_en) && ~if_t.full)
Condition totals: 3 of 3 input terms covered = 100.0%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  if_t.rd_en         Y
  if_t.wr_en         Y
   if_t.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  if_t.rd_en_0          (~if_t.full && if_t.wr_en)    
  Row   2:          1  if_t.rd_en_1          -                             
  Row   3:          1  if_t.wr_en_0          ~if_t.rd_en                   
  Row   4:          1  if_t.wr_en_1          (~if_t.full && ~if_t.rd_en)   
  Row   5:          1  if_t.full_0           (~if_t.rd_en && if_t.wr_en)   
  Row   6:          1  if_t.full_1           (~if_t.rd_en && if_t.wr_en)   

----------------Focused Condition View-------------------
Line       72 Item    1  ((if_t.rd_en && ~if_t.wr_en) && ~if_t.empty)
Condition totals: 3 of 3 input terms covered = 100.0%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  if_t.rd_en         Y
  if_t.wr_en         Y
  if_t.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  if_t.rd_en_0          -                             
  Row   2:          1  if_t.rd_en_1          (~if_t.empty && ~if_t.wr_en)  
  Row   3:          1  if_t.wr_en_0          (~if_t.empty && if_t.rd_en)   
  Row   4:          1  if_t.wr_en_1          if_t.rd_en                    
  Row   5:          1  if_t.empty_0          (if_t.rd_en && ~if_t.wr_en)   
  Row   6:          1  if_t.empty_1          (if_t.rd_en && ~if_t.wr_en)   

----------------Focused Condition View-------------------
Line       74 Item    1  ((if_t.rd_en && if_t.wr_en) && if_t.full)
Condition totals: 3 of 3 input terms covered = 100.0%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  if_t.rd_en         Y
  if_t.wr_en         Y
   if_t.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  if_t.rd_en_0          -                             
  Row   2:          1  if_t.rd_en_1          (if_t.full && if_t.wr_en)     
  Row   3:          1  if_t.wr_en_0          if_t.rd_en                    
  Row   4:          1  if_t.wr_en_1          (if_t.full && if_t.rd_en)     
  Row   5:          1  if_t.full_0           (if_t.rd_en && if_t.wr_en)    
  Row   6:          1  if_t.full_1           (if_t.rd_en && if_t.wr_en)    

----------------Focused Condition View-------------------
Line       76 Item    1  ((if_t.rd_en && if_t.wr_en) && if_t.empty)
Condition totals: 3 of 3 input terms covered = 100.0%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  if_t.rd_en         Y
  if_t.wr_en         Y
  if_t.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  if_t.rd_en_0          -                             
  Row   2:          1  if_t.rd_en_1          (if_t.empty && if_t.wr_en)    
  Row   3:          1  if_t.wr_en_0          if_t.rd_en                    
  Row   4:          1  if_t.wr_en_1          (if_t.empty && if_t.rd_en)    
  Row   5:          1  if_t.empty_0          (if_t.rd_en && if_t.wr_en)    
  Row   6:          1  if_t.empty_1          (if_t.rd_en && if_t.wr_en)    


Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                     20        20         0     100.0

================================Toggle Details================================

Toggle Coverage for File FIFO.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------
         15                              wr_ptr[2]           1           1      100.00 
         15                              wr_ptr[1]           1           1      100.00 
         15                              wr_ptr[0]           1           1      100.00 
         15                              rd_ptr[2]           1           1      100.00 
         15                              rd_ptr[1]           1           1      100.00 
         15                              rd_ptr[0]           1           1      100.00 
         16                               count[3]           1           1      100.00 
         16                               count[2]           1           1      100.00 
         16                               count[1]           1           1      100.00 
         16                               count[0]           1           1      100.00 

Total Node Count     =         10 
Toggled Node Count   =         10 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (20 of 20 bins)

=================================================================================
=== File: agent.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           15        12         3      80.0

================================Statement Details================================

Statement Coverage for file agent.sv --

    1                                                package fifo_agent_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                import fifo_driver_pkg::*;
    6                                                import fifo_monitor_pkg::*;
    7                                                import fifo_sequencer_pkg::*;
    8                                                import fifo_config_pkg::*;
    9                                                import fifo_seq_item_pkg::*;
    10                                               
    11                                                   class fifo_agent extends uvm_agent;
    12              1                    ***0***             `uvm_component_utils(fifo_agent);
    12              2                    ***0***     
    12              3                          2     
    13                                                       fifo_driver drv;
    14                                                       fifo_sequencer sqr;
    15                                                       fifo_monitor mon;
    16                                                       uvm_analysis_port #(seq_item) agt_p;
    17                                                       fifo_config cfg;
    18                                               
    19                                                       function new(string name = "shift_reg_agent", uvm_component parent =null);
    20              1                          1                 super.new(name,parent);
    21                                                       endfunction
    22                                               
    23                                                       function void build_phase(uvm_phase phase);
    24              1                          1                 super.build_phase(phase);
    25              1                          1                 drv=fifo_driver::type_id::create("driver",this);
    26              1                          1                 mon=fifo_monitor::type_id::create("monitor",this);
    27              1                          1                 sqr=fifo_sequencer::type_id::create("sequencer",this);
    28              1                          1                 agt_p=new("agent analysis port",this);
    29                                               
    30                                                           if(!uvm_config_db #(fifo_config)::get(this,"*","CFG",cfg))
    31              1                    ***0***                     `uvm_fatal("build_phase","cant get configuration object");
    32                                                       endfunction
    33                                               
    34                                                       function void connect_phase(uvm_phase phase);  
    35              1                          1                 super.connect_phase(phase);
    36              1                          1                 drv.seq_item_port.connect(sqr.seq_item_export);
    37              1                          1                 mon.mon_p.connect(agt_p);
    38              1                          1                 mon.vif=cfg.vif;
    39              1                          1                 drv.vif=cfg.vif;            
    40                                                       endfunction
    41                                                       
    42                                               
    43                                                   endclass
    44                                               
    45                                               
    46                                               
    47                                               
    48                                               
    49                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         4         1         3      25.0

================================Branch Details================================

Branch Coverage for file agent.sv --

------------------------------------IF Branch------------------------------------
    30                                         1     Count coming in to IF
    30              1                    ***0***                 if(!uvm_config_db #(fifo_config)::get(this,"*","CFG",cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    31                                   ***0***     Count coming in to IF
    31              1                    ***0***                     `uvm_fatal("build_phase","cant get configuration object");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File agent.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: config.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           11         1        10       9.0

================================Statement Details================================

Statement Coverage for file config.sv --

    1                                                package fifo_config_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                    class fifo_config extends uvm_object ;
    6               1                    ***0***             `uvm_object_utils(fifo_config);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual fifo_if vif;
    8                                                        function new(string name="config_object");
    9               1                          1                 super.new(name);
    10                                                       endfunction
    11                                                   endclass
    12                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        10         0        10       0.0

================================Branch Details================================

Branch Coverage for file config.sv --

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(fifo_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(fifo_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(fifo_config);
    6               4                    ***0***             `uvm_object_utils(fifo_config);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(fifo_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(fifo_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File config.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: coverage.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           14        12         2      85.7

================================Statement Details================================

Statement Coverage for file coverage.sv --

    1                                                package fifo_coverage_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                import fifo_seq_item_pkg::*;
    6                                                
    7                                                    class fifo_cov extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(fifo_cov);
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       seq_item item;
    11                                                       uvm_tlm_analysis_fifo #(seq_item) cov_fifo;
    12                                                       uvm_analysis_export  #(seq_item) cov_ep;
    13                                               
    14                                                       //covergorup
    15                                                       covergroup check_state ;
    16                                                           Reset:coverpoint item.rst_n{
    17                                                               bins low={0};
    18                                                               bins high={1};
    19                                                           }
    20                                                           Writing:coverpoint item.wr_en{
    21                                                               bins write_disaple={0};
    22                                                               bins write_enaple={1};
    23                                                               option.weight=0;
    24                                                           }
    25                                                           Reading:coverpoint item.rd_en{
    26                                                               bins read_disaple={0};
    27                                                               bins read_enaple={1};
    28                                                               option.weight=0;
    29                                                           }
    30                                                           ack_BIN:coverpoint item.wr_ack {
    31                                                               bins ack_low={0};
    32                                                               bins ack_high={1};
    33                                                               option.weight=0;
    34                                                           }
    35                                                           OF_BIN:coverpoint item.overflow {
    36                                                               bins OF_low={0};
    37                                                               bins OF_high={1};
    38                                                               option.weight=0;
    39                                                           }
    40                                                           FULL_BIN:coverpoint item.full {
    41                                                               bins FULL_low={0};
    42                                                               bins FULL_high={1};
    43                                                               option.weight=0;
    44                                                           }          
    45                                                           EMPTY_BIN:coverpoint item.empty {
    46                                                               bins EMPTY_low={0};
    47                                                               bins EMPTY_high={1};
    48                                                               option.weight=0;
    49                                                           }
    50                                                           ALMOSTFULL_BIN:coverpoint item.almostfull {
    51                                                               bins AF_low={0};
    52                                                               bins AF_high={1};
    53                                                               option.weight=0;
    54                                                           }
    55                                                           ALMOSTEMPTY_BIN:coverpoint item.almostempty {
    56                                                               bins AE_low={0};
    57                                                               bins AE_high={1};
    58                                                               option.weight=0;
    59                                                           } 
    60                                                           UNDERFLOW_BIN:coverpoint item.underflow {
    61                                                               bins UF_low={0};
    62                                                               bins UF_high={1};
    63                                                               option.weight=0;
    64                                                           }         
    65                                               
    66                                                           ACKNOWLDGE: cross Writing,Reading,ack_BIN{
    67                                                               illegal_bins Ack1= binsof(ack_BIN) intersect {1} && binsof(Writing) intersect {0} iff (item.rst_n);
    68                                                           }
    69                                                           OVERFLOW:   cross Writing,Reading,OF_BIN{
    70                                                               illegal_bins OF1= binsof(OF_BIN)  intersect {1} && binsof(Writing) intersect {0};
    71                                                               illegal_bins OF2= binsof(OF_BIN)  intersect {1} && binsof(Writing) intersect {1} && binsof(Reading) intersect {1};
    72                                                           }
    73                                                           FULL:       cross Writing,Reading,FULL_BIN {
    74                                                               illegal_bins full_1= binsof(FULL_BIN)  intersect {1} && binsof(Reading) intersect {1} ;
    75                                                           }
    76                                                           EMPTY:      cross Writing,Reading,EMPTY_BIN{
    77                                                               illegal_bins empty_1= binsof(EMPTY_BIN)  intersect {1} && binsof(Writing) intersect {1} iff (item.rst_n);
    78                                                           }
    79                                                           ALMOSTFULL: cross Writing,Reading,ALMOSTFULL_BIN;
    80                                                           ALMOSTEMPTY:cross Writing,Reading,ALMOSTEMPTY_BIN;
    81                                                           UNDERFLOW:  cross Writing,Reading,UNDERFLOW_BIN{
    82                                                               illegal_bins UNDERFLOW1=binsof(UNDERFLOW_BIN) intersect {1} && binsof(Writing) intersect {1};
    83                                                               illegal_bins UNDERFLOW2=binsof(UNDERFLOW_BIN) intersect {1} && binsof(Writing) intersect {0} && binsof(Reading) intersect {0};
    84                                                           }
    85                                                           reset_check:cross Reset,ack_BIN,OF_BIN,FULL_BIN,EMPTY_BIN,ALMOSTFULL_BIN,ALMOSTEMPTY_BIN,UNDERFLOW_BIN{
    86                                                               bins reset_ch=binsof(Reset.low) && binsof(ack_BIN.ack_low) && binsof(OF_BIN.OF_low) && binsof(FULL_BIN.FULL_low) 
    87                                                                             && binsof(EMPTY_BIN.EMPTY_high) && binsof(ALMOSTFULL_BIN.AF_low) && binsof(ALMOSTEMPTY_BIN.AE_low) && binsof(UNDERFLOW_BIN.UF_low)  ;
    88                                                               option.cross_auto_bin_max=0;
    89                                                           }
    90                                                       endgroup
    91                                               
    92                                               
    93                                                       function new(string name = "fifo_coverage", uvm_component parent =null);
    94              1                          1                 super.new(name,parent);
    95              1                          1                 check_state=new();
    96                                                       endfunction
    97                                               
    98                                                       function void build_phase(uvm_phase phase);
    99              1                          1                 super.build_phase(phase);
    100             1                          1               cov_fifo=new("covarage fifo",this);
    101             1                          1               cov_ep=new("coverage export",this);
    102                                                      endfunction
    103                                              
    104                                                      function void connect_phase(uvm_phase phase);  
    105             1                          1                 super.connect_phase(phase);
    106             1                          1                 cov_ep.connect(cov_fifo.analysis_export);
    107                                                      endfunction  
    108                                              
    109                                                      task run_phase(uvm_phase phase);  
    110             1                          1                 super.run_phase(phase);
    111             1                          1                 forever begin
    112             1                       1002                 cov_fifo.get(item);
    113             1                       1001                 check_state.sample();
    114                                                          end
    115                                              
    116                                                      endtask      
    117                                                
    118                                                  endclass
    119                                              endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File coverage.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: driver.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           15        12         3      80.0

================================Statement Details================================

Statement Coverage for file driver.sv --

    1                                                package fifo_driver_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                import fifo_seq_item_pkg::*;
    6                                                
    7                                                    class fifo_driver extends uvm_driver #(seq_item);
    8               1                    ***0***             `uvm_component_utils(fifo_driver);
    8               2                    ***0***     
    8               3                          2     
    9                                                        virtual fifo_if vif;
    10                                                       seq_item item;
    11                                               
    12                                                       function new(string name = "shift_reg_driver", uvm_component parent =null);
    13              1                          1                 super.new(name,parent);
    14                                                       endfunction
    15                                               
    16                                                       task run_phase(uvm_phase phase);
    17              1                          1                 super.run_phase(phase);
    18                                               
    19              1                          1                 forever begin
    20              1                       1002                     item=seq_item::type_id::create("item");
    21              1                       1002                     seq_item_port.get_next_item(item);
    22              1                       1001                     vif.data_in=item.data_in;
    23              1                       1001                     vif.rst_n= item.rst_n;
    24              1                       1001                     vif.wr_en=item.wr_en;
    25              1                       1001                     vif.rd_en=item.rd_en;
    26              1                       1001                     @(negedge vif.clk);
    27              1                       1001                     seq_item_port.item_done();
    28              1                    ***0***                     `uvm_info("run_phase",item.convert2string(),UVM_HIGH);
    29                                                           end
    30                                                       endtask
    31                                                   endclass
    32                                               endpackage
    33                                               

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         2         1         1      50.0

================================Branch Details================================

Branch Coverage for file driver.sv --

------------------------------------IF Branch------------------------------------
    28                                      1001     Count coming in to IF
    28              1                    ***0***                     `uvm_info("run_phase",item.convert2string(),UVM_HIGH);
                                            1001     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File driver.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: env.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           11         9         2      81.8

================================Statement Details================================

Statement Coverage for file env.sv --

    1                                                package fifo_env_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                    import fifo_coverage_pkg::*;
    5                                                    import fifo_scoreboard_pkg::*;
    6                                                    import fifo_agent_pkg::*;
    7                                                
    8                                                    class fifo_env extends uvm_component ;
    9               1                    ***0***             `uvm_component_utils(fifo_env);
    9               2                    ***0***     
    9               3                          2     
    10                                                       fifo_agent agt;
    11                                                       fifo_cov cov;
    12                                                       fifo_scoreboard sb;
    13                                               
    14                                                       function new(string name = "fifo_env", uvm_component parent =null);
    15              1                          1                 super.new(name,parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);        
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 sb=fifo_scoreboard::type_id::create("scoreboard",this);
    21              1                          1                 cov=fifo_cov::type_id::create("coverage collector",this);
    22              1                          1                 agt=fifo_agent::type_id::create("Agent",this);
    23                                                       endfunction
    24                                               
    25                                                       function void connect_phase(uvm_phase phase);
    26              1                          1                 super.connect_phase(phase);
    27              1                          1                 agt.agt_p.connect(sb.sb_ep);
    28              1                          1                 agt.agt_p.connect(cov.cov_ep);
    29                                                       endfunction
    30                                                   endclass
    31                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File env.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: fifo_if.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            0         0         0     100.0
Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                     86        86         0     100.0

================================Toggle Details================================

Toggle Coverage for File fifo_if.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------
          3                                    clk           1           1      100.00 
          8                             data_in[9]           1           1      100.00 
          8                             data_in[8]           1           1      100.00 
          8                             data_in[7]           1           1      100.00 
          8                             data_in[6]           1           1      100.00 
          8                             data_in[5]           1           1      100.00 
          8                             data_in[4]           1           1      100.00 
          8                             data_in[3]           1           1      100.00 
          8                             data_in[2]           1           1      100.00 
          8                             data_in[1]           1           1      100.00 
          8                            data_in[15]           1           1      100.00 
          8                            data_in[14]           1           1      100.00 
          8                            data_in[13]           1           1      100.00 
          8                            data_in[12]           1           1      100.00 
          8                            data_in[11]           1           1      100.00 
          8                            data_in[10]           1           1      100.00 
          8                             data_in[0]           1           1      100.00 
          9                                  wr_en           1           1      100.00 
          9                                  rst_n           1           1      100.00 
          9                                  rd_en           1           1      100.00 
         10                            data_out[9]           1           1      100.00 
         10                            data_out[8]           1           1      100.00 
         10                            data_out[7]           1           1      100.00 
         10                            data_out[6]           1           1      100.00 
         10                            data_out[5]           1           1      100.00 
         10                            data_out[4]           1           1      100.00 
         10                            data_out[3]           1           1      100.00 
         10                            data_out[2]           1           1      100.00 
         10                            data_out[1]           1           1      100.00 
         10                           data_out[15]           1           1      100.00 
         10                           data_out[14]           1           1      100.00 
         10                           data_out[13]           1           1      100.00 
         10                           data_out[12]           1           1      100.00 
         10                           data_out[11]           1           1      100.00 
         10                           data_out[10]           1           1      100.00 
         10                            data_out[0]           1           1      100.00 
         11                                 wr_ack           1           1      100.00 
         11                               overflow           1           1      100.00 
         12                              underflow           1           1      100.00 
         12                                   full           1           1      100.00 
         12                                  empty           1           1      100.00 
         12                             almostfull           1           1      100.00 
         12                            almostempty           1           1      100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (86 of 86 bins)

=================================================================================
=== File: monitor.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           23        20         3      86.9

================================Statement Details================================

Statement Coverage for file monitor.sv --

    1                                                package fifo_monitor_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                import fifo_seq_item_pkg::*;
    6                                                
    7                                                class  fifo_monitor extends uvm_monitor;
    8               1                    ***0***         `uvm_component_utils(fifo_monitor);
    8               2                    ***0***     
    8               3                          2     
    9                                                    virtual fifo_if vif;
    10                                                   seq_item item;
    11                                                   uvm_analysis_port #(seq_item) mon_p;
    12                                               
    13                                                   function new(string name ="fifo monitor", uvm_component parent=null);
    14              1                          1             super.new(name,parent);
    15              1                          1             mon_p=new("monitor porrt",this);
    16                                                   endfunction
    17                                               
    18                                                   task run_phase(uvm_phase phase);
    19              1                          1             super.run_phase(phase);
    20              1                          1             forever begin 
    21              1                       1002                 item=seq_item::type_id::create("monitor item") ;
    22              1                       1002                 @(negedge vif.clk);
    23              1                       1001                 item.data_in=vif.data_in;
    24              1                       1001                 item.rst_n =vif.rst_n;
    25              1                       1001                 item.wr_en =vif.wr_en;
    26              1                       1001                 item.rd_en =vif.rd_en;
    27                                                           // OUTPUT
    28              1                       1001                 item.data_out   =vif.data_out    ;
    29              1                       1001                 item.wr_ack     =vif.wr_ack   ;
    30              1                       1001                 item.overflow   =vif.overflow   ;
    31              1                       1001                 item.full       =vif.full   ;
    32              1                       1001                 item.empty      =vif.empty    ;
    33              1                       1001                 item.almostfull =vif.almostfull   ;
    34              1                       1001                 item.almostempty=vif.almostempty   ;
    35              1                       1001                 item.underflow  =vif.underflow   ;
    36              1                       1001                 mon_p.write(item);
    37              1                    ***0***                 `uvm_info("run_phase",item.convert2string(),UVM_HIGH);
    38                                                       end
    39                                                   endtask
    40                                               endclass
    41                                               
    42                                               
    43                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         2         1         1      50.0

================================Branch Details================================

Branch Coverage for file monitor.sv --

------------------------------------IF Branch------------------------------------
    37                                      1001     Count coming in to IF
    37              1                    ***0***                 `uvm_info("run_phase",item.convert2string(),UVM_HIGH);
                                            1001     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File monitor.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: scoreboard.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           25        21         4      84.0

================================Statement Details================================

Statement Coverage for file scoreboard.sv --

    1                                                package fifo_scoreboard_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                import fifo_seq_item_pkg::*;
    6                                                import shared_pkg::*;
    7                                                class fifo_scoreboard extends uvm_scoreboard;
    8               1                    ***0***         `uvm_component_utils(fifo_scoreboard);
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                   uvm_tlm_analysis_fifo #(seq_item) sb_fifo;
    11                                                   uvm_analysis_export #(seq_item) sb_ep;
    12                                                   seq_item seq_item_tb;
    13                                                   logic [seq_item::FIFO_WIDTH-1:0] data_out_ref;
    14                                                   bit [seq_item::FIFO_WIDTH-1 :0] fifo_modeling[$];;
    15                                               
    16                                                   function new(string name ="fifo_scorebored", uvm_component parent);
    17              1                          1             super.new(name,parent);
    18                                                   endfunction
    19                                               
    20                                                   function void build_phase(uvm_phase phase);
    21              1                          1             super.build_phase(phase);
    22              1                          1             sb_fifo=new("sb_fifo",this);
    23              1                          1             sb_ep=new("sb_ep",this);
    24                                                   endfunction
    25                                               
    26                                                   function void connect_phase(uvm_phase phase);
    27              1                          1             super.connect_phase(phase);
    28              1                          1             sb_ep.connect(sb_fifo.analysis_export);
    29                                                   endfunction
    30                                               
    31                                                   task run_phase(uvm_phase phase);
    32              1                          1             super.run_phase(phase);
    33              1                          1             forever begin
    34              1                       1002                 sb_fifo.get(seq_item_tb);
    35              1                       1001                 reference_model(seq_item_tb);
    36                                                           if(data_out_ref != seq_item_tb.data_out )begin
    37              1                    ***0***                 `uvm_error("run_phase",$sformatf("failed check stimulus %s while ref out=%0b",seq_item_tb.convert2string,data_out_ref));
    38              1                    ***0***                 error_count++;
    39                                                           end
    40              1                       1001                 else correct_count++;
    41                                               
    42                                                       end    
    43                                                   endtask
    44                                               
    45                                                   function void report_phase(uvm_phase phase);
    46              1                          1             super.report_phase(phase);
    47              1                          1                 `uvm_info("report_phase",$sformatf("total passed casses = %0d and total Failed casses  =%0d",correct_count,error_count),UVM_MEDIUM);
    48                                                   endfunction
    49                                               
    50                                                   
    51                                               function void reference_model(input seq_item FI_tr);
    52                                                   if(!FI_tr.rst_n )begin
    53              1                         50             fifo_modeling.delete();
    54                                                   end
    55                                                   else begin
    56                                                       if(FI_tr.wr_en && FI_tr.rd_en && fifo_modeling.size() == 0)begin
    57              1                         44                 fifo_modeling.push_back(FI_tr.data_in);
    58                                                       end
    59                                                       else if(FI_tr.wr_en && FI_tr.rd_en && fifo_modeling.size() == seq_item_tb.FIFO_DEPTH)begin
    60              1                          9                 data_out_ref=fifo_modeling.pop_front();
    61                                                       end
    62                                                       else if(FI_tr.wr_en && FI_tr.rd_en)begin
    63              1                        194                 fifo_modeling.push_back(FI_tr.data_in);
    64              1                        194                 data_out_ref=fifo_modeling.pop_front();
    65                                                       end
    66                                                       else if(FI_tr.wr_en && fifo_modeling.size() != seq_item_tb.FIFO_DEPTH)begin
    67              1                        243                 fifo_modeling.push_back(FI_tr.data_in);
    68                                                       end
    69                                                       else if(FI_tr.rd_en && fifo_modeling.size() != 0)begin
    70              1                        174                 data_out_ref=fifo_modeling.pop_front();
    71                                                       end
    72                                                   end
    73                                               endfunction
    74                                               
    75                                               endclass
    76                                               
    77                                               
    78                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        14        10         4      71.4

================================Branch Details================================

Branch Coverage for file scoreboard.sv --

------------------------------------IF Branch------------------------------------
    36                                      1001     Count coming in to IF
    36              1                    ***0***                 if(data_out_ref != seq_item_tb.data_out )begin
    40              1                       1001                 else correct_count++;
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    37                                   ***0***     Count coming in to IF
    37              1                    ***0***                 `uvm_error("run_phase",$sformatf("failed check stimulus %s while ref out=%0b",seq_item_tb.convert2string,data_out_ref));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    47                                         1     Count coming in to IF
    47              1                          1                 `uvm_info("report_phase",$sformatf("total passed casses = %0d and total Failed casses  =%0d",correct_count,error_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    52                                      1001     Count coming in to IF
    52              1                         50         if(!FI_tr.rst_n )begin
    55              1                        951         else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    56                                       951     Count coming in to IF
    56              1                         44             if(FI_tr.wr_en && FI_tr.rd_en && fifo_modeling.size() == 0)begin
    59              1                          9             else if(FI_tr.wr_en && FI_tr.rd_en && fifo_modeling.size() == seq_item_tb.FIFO_DEPTH)begin
    62              1                        194             else if(FI_tr.wr_en && FI_tr.rd_en)begin
    66              1                        243             else if(FI_tr.wr_en && fifo_modeling.size() != seq_item_tb.FIFO_DEPTH)begin
    69              1                        174             else if(FI_tr.rd_en && fifo_modeling.size() != 0)begin
                                             287     All False Count
Branch totals: 6 hits of 6 branches = 100.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms             12        12         0     100.0

================================Condition Details================================

Condition Coverage for file scoreboard.sv --

----------------Focused Condition View-------------------
Line       56 Item    1  (FI_tr.wr_en && FI_tr.rd_en && (size(this.fifo_modeling) == 0))
Condition totals: 3 of 3 input terms covered = 100.0%

                       Input Term   Covered  Reason for no coverage   Hint
                      -----------  --------  -----------------------  --------------
                      FI_tr.wr_en         Y
                      FI_tr.rd_en         Y
  (size(this.fifo_modeling) == 0)         Y

     Rows:       Hits  FEC Target                         Non-masking condition(s)      
 ---------  ---------  --------------------               -------------------------     
  Row   1:          1  FI_tr.wr_en_0                      -                             
  Row   2:          1  FI_tr.wr_en_1                      (FI_tr.rd_en && (size(this.fifo_modeling) == 0))
  Row   3:          1  FI_tr.rd_en_0                      FI_tr.wr_en                   
  Row   4:          1  FI_tr.rd_en_1                      (FI_tr.wr_en && (size(this.fifo_modeling) == 0))
  Row   5:          1  (size(this.fifo_modeling) == 0)_0  (FI_tr.wr_en && FI_tr.rd_en)  
  Row   6:          1  (size(this.fifo_modeling) == 0)_1  (FI_tr.wr_en && FI_tr.rd_en)  

----------------Focused Condition View-------------------
Line       59 Item    1  (FI_tr.wr_en && FI_tr.rd_en && (size(this.fifo_modeling) == 8))
Condition totals: 3 of 3 input terms covered = 100.0%

                       Input Term   Covered  Reason for no coverage   Hint
                      -----------  --------  -----------------------  --------------
                      FI_tr.wr_en         Y
                      FI_tr.rd_en         Y
  (size(this.fifo_modeling) == 8)         Y

     Rows:       Hits  FEC Target                         Non-masking condition(s)      
 ---------  ---------  --------------------               -------------------------     
  Row   1:          1  FI_tr.wr_en_0                      -                             
  Row   2:          1  FI_tr.wr_en_1                      (FI_tr.rd_en && (size(this.fifo_modeling) == 8))
  Row   3:          1  FI_tr.rd_en_0                      FI_tr.wr_en                   
  Row   4:          1  FI_tr.rd_en_1                      (FI_tr.wr_en && (size(this.fifo_modeling) == 8))
  Row   5:          1  (size(this.fifo_modeling) == 8)_0  (FI_tr.wr_en && FI_tr.rd_en)  
  Row   6:          1  (size(this.fifo_modeling) == 8)_1  (FI_tr.wr_en && FI_tr.rd_en)  

----------------Focused Condition View-------------------
Line       62 Item    1  (FI_tr.wr_en && FI_tr.rd_en)
Condition totals: 2 of 2 input terms covered = 100.0%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  FI_tr.wr_en         Y
  FI_tr.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FI_tr.wr_en_0         -                             
  Row   2:          1  FI_tr.wr_en_1         FI_tr.rd_en                   
  Row   3:          1  FI_tr.rd_en_0         FI_tr.wr_en                   
  Row   4:          1  FI_tr.rd_en_1         FI_tr.wr_en                   

----------------Focused Condition View-------------------
Line       66 Item    1  (FI_tr.wr_en && (size(this.fifo_modeling) != 8))
Condition totals: 2 of 2 input terms covered = 100.0%

                       Input Term   Covered  Reason for no coverage   Hint
                      -----------  --------  -----------------------  --------------
                      FI_tr.wr_en         Y
  (size(this.fifo_modeling) != 8)         Y

     Rows:       Hits  FEC Target                         Non-masking condition(s)      
 ---------  ---------  --------------------               -------------------------     
  Row   1:          1  FI_tr.wr_en_0                      -                             
  Row   2:          1  FI_tr.wr_en_1                      (size(this.fifo_modeling) != 8)
  Row   3:          1  (size(this.fifo_modeling) != 8)_0  FI_tr.wr_en                   
  Row   4:          1  (size(this.fifo_modeling) != 8)_1  FI_tr.wr_en                   

----------------Focused Condition View-------------------
Line       69 Item    1  (FI_tr.rd_en && (size(this.fifo_modeling) != 0))
Condition totals: 2 of 2 input terms covered = 100.0%

                       Input Term   Covered  Reason for no coverage   Hint
                      -----------  --------  -----------------------  --------------
                      FI_tr.rd_en         Y
  (size(this.fifo_modeling) != 0)         Y

     Rows:       Hits  FEC Target                         Non-masking condition(s)      
 ---------  ---------  --------------------               -------------------------     
  Row   1:          1  FI_tr.rd_en_0                      -                             
  Row   2:          1  FI_tr.rd_en_1                      (size(this.fifo_modeling) != 0)
  Row   3:          1  (size(this.fifo_modeling) != 0)_0  FI_tr.rd_en                   
  Row   4:          1  (size(this.fifo_modeling) != 0)_1  FI_tr.rd_en                   


Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File scoreboard.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: seq_item.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           15         5        10      33.3

================================Statement Details================================

Statement Coverage for file seq_item.sv --

    1                                                package fifo_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                
    5                                                    class seq_item extends uvm_sequence_item ;
    6               1                    ***0***             `uvm_object_utils(seq_item);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                       1001     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                       1001     
    6              10                    ***0***     
    7                                                        parameter FIFO_WIDTH = 16;
    8                                                        parameter FIFO_DEPTH = 8;
    9                                                
    10                                                       rand logic [FIFO_WIDTH-1:0] data_in;
    11                                                       rand logic  rst_n, wr_en, rd_en;
    12                                                       logic [FIFO_WIDTH-1:0] data_out;
    13                                                       logic wr_ack, overflow;
    14                                                       logic full, empty, almostfull, almostempty, underflow;
    15                                                           
    16                                                       localparam max_fifo_addr = $clog2(FIFO_DEPTH);
    17                                               
    18                                                       int RD_EN_ON_DIST,WR_EN_ON_DIST;
    19                                               
    20                                                       function new(string name = "fifo_sequence_item",int RD_EN_ON_DIST_t=30 , int WR_EN_ON_DIST_t=70);
    21              1                       3005                 super.new(name);
    22              1                       3005                 RD_EN_ON_DIST=RD_EN_ON_DIST_t;
    23              1                       3005                 WR_EN_ON_DIST=WR_EN_ON_DIST_t;
    24                                                       endfunction
    25                                               
    26                                                        function string convert2string();
    27              1                    ***0***                 return $sformatf("%s  reset =%0b data_in=%0b ,wr_en=%0b ,rd_en=%0b ,data_out=%0b ,wr_ack=%0b,overflow=%0b ,full=%0b ,empty=%0b
    28                                                           ,almostfull=%0b,almostempty=%0b ,underflow=%0b ",
    29                                                           super.convert2string(),rst_n,data_in,wr_en,rd_en,data_out,wr_ack,overflow,full,empty,almostfull,almostempty,underflow);            
    30                                                       endfunction
    31                                               
    32                                                       function string convert2string_stimulus();
    33              1                    ***0***                 return $sformatf("%s  reset =%0b data_in=%0b ,wr_en=%0b ,rd_en=%0b  ",
    34                                                           super.convert2string(),rst_n,data_in,wr_en,rd_en);
    35                                                       endfunction
    36                                               
    37                                                       constraint x{
    38                                                           rst_n dist { 0:= 5 , 1:= 95 };
    39                                                           wr_en dist { 1:= WR_EN_ON_DIST , 0:= 100-WR_EN_ON_DIST};
    40                                                           rd_en dist { 1:= RD_EN_ON_DIST , 0:= 100-RD_EN_ON_DIST};
    41                                                       }
    42                                                   
    43                                               
    44                                                   endclass
    45                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        10         2         8      20.0

================================Branch Details================================

Branch Coverage for file seq_item.sv --

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    6                                       1001     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(seq_item);
                                            1001     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(seq_item);
    6               4                    ***0***             `uvm_object_utils(seq_item);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    6                                       1001     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(seq_item);
                                            1001     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File seq_item.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: sequence.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           30        14        16      46.6

================================Statement Details================================

Statement Coverage for file sequence.sv --

    1                                                package fifo_sequence_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import fifo_seq_item_pkg::*;
    5                                                import shared_pkg::*;
    6                                                
    7                                                    class reset extends uvm_sequence #(seq_item);
    8               1                    ***0***             `uvm_object_utils(reset);
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                        seq_item item;
    10                                                       function new(string name = "RESET");
    11              1                          1                 super.new(name);
    12                                                       endfunction
    13                                                       task body();
    14              1                          1                     item=seq_item::type_id::create("res") ; 
    15              1                          1                     start_item(item);
    16              1                          1                     item.rst_n=0;
    17              1                          1                     finish_item(item);
    18                                                       endtask
    19                                                   endclass
    20                                               
    21                                                   class main extends uvm_sequence #(seq_item);
    22              1                    ***0***             `uvm_object_utils(main);
    22              2                    ***0***     
    22              3                    ***0***     
    22              4                    ***0***     
    22              5                    ***0***     
    22              6                          1     
    22              7                    ***0***     
    22              8                    ***0***     
    22              9                          1     
    22             10                    ***0***     
    23                                                       seq_item item;
    24                                                       function new(string name = "MAIN");
    25              1                          1                 super.new(name);
    26                                                       endfunction
    27                                               
    28                                                       task body();
    29              1                       1000                 repeat(1000)begin
    30              1                       1000                     item=new("same",50,50); 
    31              1                       1000                     start_item(item);
    32                                                               assert(item.randomize());
    33              1                       1000                     finish_item(item);
    34                                                           end
    35                                                       endtask
    36                                                   endclass
    37                                               
    38                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        20         4        16      20.0

================================Branch Details================================

Branch Coverage for file sequence.sv --

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(reset);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(reset);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(reset);
    8               4                    ***0***             `uvm_object_utils(reset);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(reset);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(reset);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              1                    ***0***             `uvm_object_utils(main);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    22                                         1     Count coming in to IF
    22              2                    ***0***             `uvm_object_utils(main);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              3                    ***0***             `uvm_object_utils(main);
    22              4                    ***0***             `uvm_object_utils(main);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    22                                         1     Count coming in to IF
    22              5                    ***0***             `uvm_object_utils(main);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              6                    ***0***             `uvm_object_utils(main);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File sequence.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: sequencer.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            4         2         2      50.0

================================Statement Details================================

Statement Coverage for file sequencer.sv --

    1                                                package fifo_sequencer_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                    import fifo_seq_item_pkg::*;
    6                                                    class fifo_sequencer extends uvm_sequencer #(seq_item);
    7               1                    ***0***             `uvm_component_utils(fifo_sequencer);
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        function new(string name="sequencer",uvm_component phase);
    10              1                          1                 super.new(name,phase);
    11                                                       endfunction
    12                                                   endclass
    13                                               
    14                                               
    15                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File sequencer.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: test.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           18        15         3      83.3

================================Statement Details================================

Statement Coverage for file test.sv --

    1                                                package fifo_test_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                
    5                                                import fifo_sequence_pkg::*;
    6                                                import fifo_env_pkg::*;
    7                                                import fifo_config_pkg::*;
    8                                                
    9                                                    class fifo_test extends uvm_test;
    10              1                    ***0***             `uvm_component_utils(fifo_test);
    10              2                    ***0***     
    10              3                          4     
    11                                                       reset sq1;
    12                                                       main  sq2;
    13                                                       fifo_env env;
    14                                                       fifo_config cfg;
    15                                               
    16                                                       function new(string name = "fifo_test", uvm_component parent =null);
    17              1                          1                 super.new(name,parent);
    18                                                       endfunction
    19                                               
    20                                                       function void build_phase(uvm_phase phase);        
    21              1                          1                 super.build_phase(phase);
    22              1                          1                 sq1=reset::type_id::create("rst_n");
    23              1                          1                 sq2=main::type_id::create("sequences");
    24              1                          1                 env=fifo_env::type_id::create("env",this);
    25              1                          1                 cfg=fifo_config::type_id::create("config");
    26                                               
    27                                                           if(! uvm_config_db #(virtual fifo_if)::get(this,"","virtualIf",cfg.vif))
    28              1                    ***0***                     `uvm_fatal("build_phase","cant get virtual interface");
    29                                               
    30              1                          1                 uvm_config_db #(fifo_config)::set(this,"*","CFG",cfg);
    31                                                       endfunction
    32                                               
    33                                                       task run_phase(uvm_phase phase);        
    34              1                          1                 super.build_phase(phase);
    35              1                          1                 phase.raise_objection(this);
    36              1                          1                 `uvm_info("run_phase","reset sequence has started now",UVM_MEDIUM);
    37              1                          1                 sq1.start(env.agt.sqr);
    38              1                          1                 `uvm_info("run_phase","main sequence has started now",UVM_MEDIUM);
    39              1                          1                 sq2.start(env.agt.sqr);
    40              1                          1                 phase.drop_objection(this);
    41                                                       endtask
    42                                                       
    43                                               
    44                                                   endclass
    45                                               
    46                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         8         3         5      37.5

================================Branch Details================================

Branch Coverage for file test.sv --

------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                    ***0***                 if(! uvm_config_db #(virtual fifo_if)::get(this,"","virtualIf",cfg.vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              1                    ***0***                     `uvm_fatal("build_phase","cant get virtual interface");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    36                                         1     Count coming in to IF
    36              1                          1                 `uvm_info("run_phase","reset sequence has started now",UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                          1                 `uvm_info("run_phase","main sequence has started now",UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File test.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: top.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            4         4         0     100.0

================================Statement Details================================

Statement Coverage for file top.sv --

    1                                                import uvm_pkg::*;
    2                                                `include "uvm_macros.svh"
    3                                                import fifo_test_pkg::*;
    4                                                module top();
    5                                                
    6                                                bit clk=0;
    7                                                
    8               1                       2003     always #100 clk=!clk;
    8               2                       2002     
    9                                                
    10                                               
    11                                               fifo_if if_t(clk);
    12                                               FIFO dut(if_t);
    13                                               
    14                                               
    15                                               initial begin
    16              1                          1     uvm_config_db #(virtual fifo_if)::set(null,"*","virtualIf",if_t);
    17              1                          1     run_test("fifo_test");
    18                                               end
    19                                               
    20                                               
    21                                               
    22                                               endmodule

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      2         2         0     100.0

================================Toggle Details================================

Toggle Coverage for File top.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------
          6                                    clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (2 of 2 bins)

COVERGROUP COVERAGE:
-----------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal    Status               
                                                                                              
-----------------------------------------------------------------------------------------------
 TYPE /fifo_coverage_pkg/fifo_cov/check_state          100.0%        100    Covered              
    covered/total bins:                                    65         65                      
    missing/total bins:                                     0         65                      
    % Hit:                                             100.0%        100                      
    Coverpoint check_state::Reset                      100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin low                                            50          1    Covered              
        bin high                                          951          1    Covered              
    Coverpoint check_state::Writing                    100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin write_disaple                                 476          1    Covered              
        bin write_enaple                                  524          1    Covered              
    Coverpoint check_state::Reading                    100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin read_disaple                                  506          1    Covered              
        bin read_enaple                                   494          1    Covered              
    Coverpoint check_state::ack_BIN                    100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin ack_low                                       520          1    Covered              
        bin ack_high                                      481          1    Covered              
    Coverpoint check_state::OF_BIN                     100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin OF_low                                        997          1    Covered              
        bin OF_high                                         4          1    Covered              
    Coverpoint check_state::FULL_BIN                   100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin FULL_low                                      972          1    Covered              
        bin FULL_high                                      29          1    Covered              
    Coverpoint check_state::EMPTY_BIN                  100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin EMPTY_low                                     792          1    Covered              
        bin EMPTY_high                                    209          1    Covered              
    Coverpoint check_state::ALMOSTFULL_BIN             100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin AF_low                                        942          1    Covered              
        bin AF_high                                        59          1    Covered              
    Coverpoint check_state::ALMOSTEMPTY_BIN            100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin AE_low                                        747          1    Covered              
        bin AE_high                                       254          1    Covered              
    Coverpoint check_state::UNDERFLOW_BIN              100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin UF_low                                        948          1    Covered              
        bin UF_high                                        53          1    Covered              
    Cross check_state::ACKNOWLDGE                      100.0%        100    Covered              
        covered/total bins:                                 6          6                      
        missing/total bins:                                 0          6                      
        % Hit:                                         100.0%        100                      
        bin <write_disaple,read_disaple,ack_low>          243          1    Covered              
        bin <write_enaple,read_disaple,ack_low>            20          1    Covered              
        bin <write_disaple,read_enaple,ack_low>           233          1    Covered              
        bin <write_enaple,read_enaple,ack_low>             23          1    Covered              
        bin <write_enaple,read_disaple,ack_high>          243          1    Covered              
        bin <write_enaple,read_enaple,ack_high>           238          1    Covered              
        illegal_bin Ack1                                    0               ZERO                 
    Cross check_state::OVERFLOW                        100.0%        100    Covered              
        covered/total bins:                                 5          5                      
        missing/total bins:                                 0          5                      
        % Hit:                                         100.0%        100                      
        bin <write_disaple,read_disaple,OF_low>           243          1    Covered              
        bin <write_disaple,read_enaple,OF_low>            233          1    Covered              
        bin <write_enaple,read_disaple,OF_low>            259          1    Covered              
        bin <write_enaple,read_disaple,OF_high>             4          1    Covered              
        bin <write_enaple,read_enaple,OF_low>             261          1    Covered              
        illegal_bin OF1                                     0               ZERO                 
        illegal_bin OF2                                     0               ZERO                 
    Cross check_state::FULL                            100.0%        100    Covered              
        covered/total bins:                                 6          6                      
        missing/total bins:                                 0          6                      
        % Hit:                                         100.0%        100                      
        bin <write_disaple,read_disaple,FULL_low>         235          1    Covered              
        bin <write_disaple,read_enaple,FULL_low>          233          1    Covered              
        bin <write_enaple,read_disaple,FULL_low>          242          1    Covered              
        bin <write_enaple,read_enaple,FULL_low>           261          1    Covered              
        bin <write_disaple,read_disaple,FULL_high>          8          1    Covered              
        bin <write_enaple,read_disaple,FULL_high>          21          1    Covered              
        illegal_bin full_1                                  0               ZERO                 
    Cross check_state::EMPTY                           100.0%        100    Covered              
        covered/total bins:                                 6          6                      
        missing/total bins:                                 0          6                      
        % Hit:                                         100.0%        100                      
        bin <write_disaple,read_disaple,EMPTY_low>        178          1    Covered              
        bin <write_enaple,read_disaple,EMPTY_low>         247          1    Covered              
        bin <write_disaple,read_enaple,EMPTY_low>         120          1    Covered              
        bin <write_enaple,read_enaple,EMPTY_low>          247          1    Covered              
        bin <write_disaple,read_disaple,EMPTY_high> 
                                                           65          1    Covered              
        bin <write_disaple,read_enaple,EMPTY_high>        113          1    Covered              
        illegal_bin empty_1                                 0               ZERO                 
    Cross check_state::ALMOSTFULL                      100.0%        100    Covered              
        covered/total bins:                                 8          8                      
        missing/total bins:                                 0          8                      
        % Hit:                                         100.0%        100                      
        bin <write_disaple,read_disaple,AF_low>           235          1    Covered              
        bin <write_enaple,read_disaple,AF_low>            241          1    Covered              
        bin <write_disaple,read_enaple,AF_low>            227          1    Covered              
        bin <write_enaple,read_enaple,AF_low>             238          1    Covered              
        bin <write_disaple,read_disaple,AF_high>            8          1    Covered              
        bin <write_enaple,read_disaple,AF_high>            22          1    Covered              
        bin <write_disaple,read_enaple,AF_high>             6          1    Covered              
        bin <write_enaple,read_enaple,AF_high>             23          1    Covered              
    Cross check_state::ALMOSTEMPTY                     100.0%        100    Covered              
        covered/total bins:                                 8          8                      
        missing/total bins:                                 0          8                      
        % Hit:                                         100.0%        100                      
        bin <write_disaple,read_disaple,AE_low>           182          1    Covered              
        bin <write_enaple,read_disaple,AE_low>            218          1    Covered              
        bin <write_disaple,read_enaple,AE_low>            193          1    Covered              
        bin <write_enaple,read_enaple,AE_low>             153          1    Covered              
        bin <write_disaple,read_disaple,AE_high>           61          1    Covered              
        bin <write_enaple,read_disaple,AE_high>            45          1    Covered              
        bin <write_disaple,read_enaple,AE_high>            40          1    Covered              
        bin <write_enaple,read_enaple,AE_high>            108          1    Covered              
    Cross check_state::UNDERFLOW                       100.0%        100    Covered              
        covered/total bins:                                 5          5                      
        missing/total bins:                                 0          5                      
        % Hit:                                         100.0%        100                      
        bin <write_disaple,read_disaple,UF_low>           243          1    Covered              
        bin <write_disaple,read_enaple,UF_low>            180          1    Covered              
        bin <write_disaple,read_enaple,UF_high>            53          1    Covered              
        bin <write_enaple,read_disaple,UF_low>            263          1    Covered              
        bin <write_enaple,read_enaple,UF_low>             261          1    Covered              
        illegal_bin UNDERFLOW1                              0               ZERO                 
        illegal_bin UNDERFLOW2                              0               ZERO                 
    Cross check_state::reset_check                     100.0%        100    Covered              
        covered/total bins:                                 1          1                      
        missing/total bins:                                 0          1                      
        % Hit:                                         100.0%        100                      
        bin reset_ch                                       50          1    Covered              
 CLASS fifo_cov

TOTAL COVERGROUP COVERAGE: 100.0%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
---------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Count Status    
                                         Unit   UnitType                                      
---------------------------------------------------------------------------------------------
/top/dut/OF_cover                        FIFO   Verilog  SVA  FIFO.sv(150)        4 Covered   
/top/dut/UF_cover                        FIFO   Verilog  SVA  FIFO.sv(151)       50 Covered   
/top/dut/ACK_cover                       FIFO   Verilog  SVA  FIFO.sv(152)      461 Covered   
/top/dut/intWr_cover                     FIFO   Verilog  SVA  FIFO.sv(153)      236 Covered   
/top/dut/intRD_cover                     FIFO   Verilog  SVA  FIFO.sv(154)      161 Covered   
/top/dut/intRD_WR_cover                  FIFO   Verilog  SVA  FIFO.sv(155)      183 Covered   
/top/dut/intWR_RD_WR_empty_cover         FIFO   Verilog  SVA  FIFO.sv(156)       42 Covered   
/top/dut/intWR_RD_WR_full_cover          FIFO   Verilog  SVA  FIFO.sv(157)        9 Covered   

TOTAL DIRECTIVE COVERAGE: 100.0%  COVERS: 8

ASSERTION RESULTS:
-------------------------------------------------------
Name                 File(Line)           Failure Pass 
                                          Count   Count 
-------------------------------------------------------
/top/dut/rst_check   FIFO.sv(90)                0     1
/top/dut/full_check  FIFO.sv(93)                0     1
/top/dut/almost_full_check
                     FIFO.sv(97)                0     1
/top/dut/empty_check FIFO.sv(100)               0     1
/top/dut/almost_empty_check
                     FIFO.sv(104)               0     1
/top/dut/OF_check    FIFO.sv(141)               0     1
/top/dut/UF_check    FIFO.sv(142)               0     1
/top/dut/ACK_check   FIFO.sv(143)               0     1
/top/dut/intWr_check FIFO.sv(144)               0     1
/top/dut/intRD_check FIFO.sv(145)               0     1
/top/dut/intWR_RD_WR FIFO.sv(146)               0     1
/top/dut/intWR_RD_WR_full
                     FIFO.sv(147)               0     1
/top/dut/intWR_RD_WR_empty
                     FIFO.sv(148)               0     1
/fifo_sequence_pkg/main/body/#ublk#40571367#29/immed__32
                     sequence.sv(32)            0     1

Total Coverage By File (code coverage only, filtered view): 81.7%

